on:
  push:
    branches:
      - master
  workflow_dispatch:
  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      # Create and validate .env file
      - name: Create and validate .env file
        env:
           FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
           MONGODB_URI: ${{ secrets.MONGODB_URI }}
           CLOUDINARY_NAME: ${{ secrets.CLOUDINARY_NAME }}
           CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
           CLOUDINARY_SECRET_KEY: ${{ secrets.CLOUDINARY_SECRET_KEY }} 
           ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
           ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
           JWT_SECRET: ${{ secrets.JWT_SECRET }}
           HOST: ${{ secrets.HOST }}
           SERVICE: ${{ secrets.SERVICE }}
           EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
           SECURE: ${{ secrets.SECURE }}
           USER: ${{ secrets.USER }}
           PASS: ${{ secrets.PASS }}
           FRONTEND_URLC: ${{ secrets.FRONTEND_URLC }}
        run: |
          cd backend
          cat <<EOF > .env
          FRONTEND_URL=${FRONTEND_URL}
          FRONTEND_URLC=${FRONTEND_URLC}
          PASS=${PASS}
          USER=${USER}
          SECURE=${SECURE}
          EMAIL_PORT=${EMAIL_PORT}
          SERVICE=${SERVICE}
          HOST=${HOST}
          JWT_SECRET=${JWT_SECRET}
          ADMIN_PASSWORD=${ADMIN_PASSWORD}
          ADMIN_EMAIL=${ADMIN_EMAIL}
          CLOUDINARY_SECRET_KEY=${CLOUDINARY_SECRET_KEY}
          CLOUDINARY_NAME=${CLOUDINARY_NAME}
          MONGODB_URI=${MONGODB_URI}
          EOF
          echo ".env file created"
          
          # Debug step: print .env contents (hide sensitive values for security)
          echo "Created .env file contents:"
          grep -v "PASS\|USER\|SECRET_KEY\|ADMIN_PASSWORD\|JWT_SECRET" .env || true

      # Install Node.js dependencies (including dotenv)
      - name: Install Node.js dependencies (including dotenv)
        run: |
          cd backend
          npm install

      # Debug: Log environment variable usage in runtime
      - name: Test environment variable usage
        run: |
          cd backend
          echo "Testing environment variable usage:"
          node -e "
            const dotenv = require('dotenv');
            dotenv.config();
            console.log('Loaded MONGODB_URI:', process.env.MONGODB_URI ? 'Present' : 'Missing');
            console.log('Loaded FRONTEND_URL:', process.env.FRONTEND_URL ? 'Present' : 'Missing');
          "

      # Upload the backend folder with node_modules as an artifact
      - name: Create deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            backend
            backend/package.json
            backend/server.js

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CLSGBookingsDB'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILEDB }}
          package: ./backend
      
      
