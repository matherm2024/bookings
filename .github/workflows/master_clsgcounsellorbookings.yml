name: Build and deploy Node.js app to Azure Web App - CLSGCounsellorBookings

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Force delete .env
        run: |
          cd ./frontend/build
          chmod +w .env 2>/dev/null || true  # Make writable if needed
          rm -f .env
          ls -la  # Confirm deletion

      - name: Verify build output
        run: |
          cd frontend/build
          ls -la

 #     - name: Create .env file for Vite
  #      env:
   #        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
    #       VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
     #      VITE: vite
    #    run: |
    #      cd frontend/build
    #      touch .env
    #      echo "VITE_FRONTEND_URL=${FRONTEND_URL}" >> .env
    #      echo "VITE=${VITE}" >> .env
    #      echo "VITE_BACKEND_URL=${VITE_BACKEND_URL}" >> .env
    #      echo ".env file created with VITE-prefixed variables"
    #      ls -la  # Verify .env file creation

      - name: npm install, build, and test
        run: |
          cd frontend
          npm install
          npm run build 
          npm test --if-present 

      - name: Recreate .env file after build
        env:
           FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
           VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
           VITE: vite
        run: |
          cd frontend/build
          touch .env
          echo "VITE_FRONTEND_URL=${FRONTEND_URL}" >> .env
          echo "VITE=${VITE}" >> .env
          echo "VITE_BACKEND_URL=${VITE_BACKEND_URL}" >> .env
          echo ".env file recreated after build"
          ls -la  # Verify .env is there
 
          
      - name: Ensure .env is in the deployment package
        run: |
          cd frontend/build
          if [ -f .env ]; then
            echo ".env file exists and is ready for deployment"
          else
            echo "Error: .env file not found"
            exit 1
          fi
          
      - name: Move .env file to deployment package
        run: |
          cp frontend/build/.env frontend/.env
          ls -la frontend/  # Verify .env is moved correctly
   
      - name: Verify final artifact structure
        run: |
          ls -R ./frontend/build
          
      - name: Verify frontend structure
        run: |
          ls -R ./frontend
          
      - name: Ensure .env exists before uploading
        run: |
          if [ ! -f frontend/build/.env ]; then
            echo "Recreating .env before upload..."
            echo "VITE_FRONTEND_URL=${FRONTEND_URL}" > frontend/build/.env
            echo "VITE=${VITE}" >> frontend/build/.env
            echo "VITE_BACKEND_URL=${VITE_BACKEND_URL}" >> frontend/build/.env
          fi
          ls -la frontend/build  # Check contents before uploading

          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            ./frontend/build
        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}


          
    steps:
 

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

